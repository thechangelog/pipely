varnishtest "Test Assets backend"

# App mock server
server s1 {
  rxreq
  txresp -status 200 -body "App backend"
} -start

# Assets mock server with responses for all feed requests
server s2 {
  # Test for HEAD /static/images/podcasts/podcast-original-f16d0363067166f241d080ee2e2d4a28.png
  rxreq
  expect req.url == "/static/images/podcasts/podcast-original-f16d0363067166f241d080ee2e2d4a28.png"
  txresp -status 200

  # Test for /static/images/podcasts/podcast-original-f16d0363067166f241d080ee2e2d4a28.png
  rxreq
  expect req.url == "/static/images/podcasts/podcast-original-f16d0363067166f241d080ee2e2d4a28.png"
  txresp -status 200 -body "podcast-original-f16d0363067166f241d080ee2e2d4a28.png"

  # Test for /static/css/email-5690e09e20c0b25fefebbc5049362b39.css
  rxreq
  expect req.url == "/static/css/email-5690e09e20c0b25fefebbc5049362b39.css"
  txresp -status 200 -body "email-5690e09e20c0b25fefebbc5049362b39.css"

  # Test for /uploads/news/140/changelog-news-140.mp3
  rxreq
  expect req.url == "/uploads/news/140/changelog-news-140.mp3"
  txresp -status 200 -body "changelog-news-140.mp3"
} -start

# Start varnish with our VCL
varnish v1 -vcl {
  vcl 4.1;

  import std;

  backend app {
    .host = "${s1_addr}";
    .port = "${s1_port}";
  }

  backend assets {
    .host = "${s2_addr}";
    .port = "${s2_port}";
  }

  sub vcl_recv {
    if (req.http.host == "cdn.tld") {
      if (req.method !~ "GET|HEAD") {
        return(synth(405, "Method Not Allowed"));
      }
      set req.http.x-backend = "assets";
      return(hash);
    }
  }

  sub vcl_hash {
	if (req.http.x-backend == "assets") {
		set req.backend_hint = assets;
	} else {
		set req.backend_hint = app;
	}
	unset req.http.x-backend;
  }

  sub vcl_synth {
    if (req.http.host == "cdn.tld"
        && resp.status == 405) {
      set resp.http.allow = "GET, HEAD";
      return(deliver);
    }
  }

  # Disable caching for testing
  sub vcl_backend_response {
    set beresp.uncacheable = true;
    return(deliver);
  }
} -start

# / should go to app backend
client c1 {
  txreq -url "/"
  rxresp
  expect resp.status == 200
  expect resp.body == "App backend"
} -run

# POST /static/images/podcasts/podcast-original-f16d0363067166f241d080ee2e2d4a28.png should not be allowed
client c2 {
  txreq -method "POST" -url "/static/images/podcasts/podcast-original-f16d0363067166f241d080ee2e2d4a28.png" -hdr "Host: cdn.tld"
  rxresp
  expect resp.status == 405
  expect resp.http.allow == "GET, HEAD"
} -run

# HEAD /static/images/podcasts/podcast-original-f16d0363067166f241d080ee2e2d4a28.png should go to assets backend
client c3 {
  txreq -method "HEAD" -url "/static/images/podcasts/podcast-original-f16d0363067166f241d080ee2e2d4a28.png" -hdr "Host: cdn.tld"
  rxresp
  expect resp.status == 200
} -run

# /static/images/podcasts/podcast-original-f16d0363067166f241d080ee2e2d4a28.png should go to assets backend
client c4 {
  txreq -url "/static/images/podcasts/podcast-original-f16d0363067166f241d080ee2e2d4a28.png" -hdr "Host: cdn.tld"
  rxresp
  expect resp.status == 200
  expect resp.body == "podcast-original-f16d0363067166f241d080ee2e2d4a28.png"
} -run

# /static/css/email-5690e09e20c0b25fefebbc5049362b39.css should go to assets backend
client c5 {
  txreq -url "/static/css/email-5690e09e20c0b25fefebbc5049362b39.css" -hdr "Host: cdn.tld"
  rxresp
  expect resp.status == 200
  expect resp.body == "email-5690e09e20c0b25fefebbc5049362b39.css"
} -run

# /uploads/news/140/changelog-news-140.mp3 should go to assets backend
client c6 {
  txreq -url "/uploads/news/140/changelog-news-140.mp3" -hdr "Host: cdn.tld"
  rxresp
  expect resp.status == 200
  expect resp.body == "changelog-news-140.mp3"
} -run
